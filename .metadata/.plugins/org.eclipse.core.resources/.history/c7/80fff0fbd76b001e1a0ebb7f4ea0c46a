package com.saeyan.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import com.saeyan.dto.MemberVO;

public class MemberDAO {
	private static MemberDAO instance = new MemberDAO();
//private 생성자로 만들어서 싱글톤 패턴-> MemberDAO 하나만 생성하겠다
	private MemberDAO() {	}

//다른데서 불러오려면 static이여야 함
	public static MemberDAO getInstance() {
//		return new MemberDAO(); -> 이렇게 두면 getInstance할때마다 객체가 생성됨! 하나만 생성되어서 접근하는게 아님!! 따라서 객체를 클래스에서 생성하고 여기에는 생성된 객체를 전달
		return instance;
	}
	
	public Connection getConnection() throws SQLException {
		Connection conn = null;
		try {
			Context initContext = new InitialContext();
			Context envContext;
			envContext = (Context)initContext.lookup("java:/comp/env");
			DataSource ds = (DataSource)envContext.lookup("jdbc/myoracle"); //추가한 리소스 name과 동일
			conn = ds.getConnection();
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return conn; // try구문이 지역변수라서 에러남 -> 밖에 빼줌
	}
	
	public int userCheck(String userid, String pwd) {
		int result = -1;
		String sql = "select pwd from member where userid = ?";
		Connection conn = null;
		PreparedStatement psmt = null;
		ResultSet rs = null;
		PreparedStatement psmt = conn.prepareStatement(sql);
		Connection conn = getConnection();
		
		return result;
	}
	
	public MemberVO getMember(String userid) {
		MemberVO vo = new MemberVO();
		return vo;
	}
	//아이디 중복 체크
	public int confirmId(String userid) {
		return 0;
	}
	
	public int insertMember(MemberVO vo) {
		return 0;
	}
	
	public int updateMember() {
		return 0;
	}
	
	
}

